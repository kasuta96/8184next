// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  user               User      @relation(fields: [userId], references: [id])
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  password      String?   @db.VarChar(255)
  articles      Articles[]
  profile       Profile?
  status        Int       @default(0)
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@unique([identifier, token])
}


model Articles {
  id          Int      @default(autoincrement()) @id
  title       String   @db.VarChar(255)
  content     Json
  published   Boolean  @default(false)
  status      Int      @default(0)
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  cateId      Int?
  description String?  @db.VarChar(255)
  thumbnail   String?  @db.VarChar(255)
  tags        String?  @db.VarChar(255)
  point       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Profile {
  id       Int     @default(autoincrement()) @id
  info     Json
  settings Json
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @unique
}
